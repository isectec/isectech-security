steps:
  # Debug: show workspace to help diagnose build failures
  - name: 'alpine:3'
    entrypoint: /bin/sh
    args:
      - -lc
      - |
        set -eux
        echo "PWD=$(pwd)"
        ls -la
        echo '--- Dockerfile.frontend.production (top) ---'
        head -n 60 Dockerfile.frontend.production || true
        echo '--- .dockerignore (top) ---'
        head -n 120 .dockerignore || true

  # Build Docker image using BuildKit for advanced features
  - name: 'gcr.io/cloud-builders/docker'
    env:
      - 'DOCKER_BUILDKIT=1'
    args: [
      'build',
      '--no-cache',
      '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/isectech-app',
      '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/isectech-app:$COMMIT_SHA',
      '-f', 'Dockerfile.frontend.production',
      '--build-arg', 'BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")',
      '--build-arg', 'BUILD_VERSION=$COMMIT_SHA',
      '--build-arg', 'BUILD_COMMIT=$COMMIT_SHA',
      '.'
    ]
    
  # Push to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/isectech-app']

# Deploy to Cloud Run
images:
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/cloud-run-source-deploy/isectech-app'
  
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'
  
timeout: '1800s'