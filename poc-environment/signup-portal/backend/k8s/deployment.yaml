# iSECTECH POC Signup Portal - Backend Kubernetes Deployment
# Production-Grade Kubernetes Manifests
# Version: 1.0

apiVersion: v1
kind: Namespace
metadata:
  name: poc-signup-portal
  labels:
    app.kubernetes.io/name: poc-signup-portal
    app.kubernetes.io/instance: production
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: isectech-poc-platform
    app.kubernetes.io/managed-by: kubernetes
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: poc-signup-backend-config
  namespace: poc-signup-portal
  labels:
    app.kubernetes.io/name: poc-signup-backend
    app.kubernetes.io/component: backend
data:
  ENVIRONMENT: "production"
  LOG_LEVEL: "info"
  PORT: "8080"
  GCP_PROJECT: "isectech-poc-platform"
  GCP_REGION: "us-central1"
  CORS_ALLOW_ORIGINS: "https://app.isectech.org,https://signup.isectech.org"
  RATE_LIMIT_RPS: "100"
  MAX_REQUEST_SIZE: "10485760"
  ENABLE_METRICS: "true"
  METRICS_PORT: "9090"
  ENABLE_AUDIT_LOGGING: "true"
  DATA_RETENTION_DAYS: "365"
  AUDIT_LOG_RETENTION_DAYS: "2555"
---
apiVersion: v1
kind: Secret
metadata:
  name: poc-signup-backend-secrets
  namespace: poc-signup-portal
  labels:
    app.kubernetes.io/name: poc-signup-backend
    app.kubernetes.io/component: backend
type: Opaque
data:
  # Base64 encoded secrets - replace with actual values
  DATABASE_URL: cG9zdGdyZXM6Ly91c2VybmFtZTpwYXNzd29yZEBsb2NhbGhvc3Q6NTQzMi9pc2VjdGVjaF9wb2M/c3NsbW9kZT1kaXNhYmxl
  JWT_SECRET: eW91ci1zdXBlci1zZWNyZXQtand0LWtleS1jaGFuZ2UtaW4tcHJvZHVjdGlvbi1taW5pbXVtLTMyLWNoYXJhY3RlcnM=
  SMTP_PASSWORD: eW91ci1zbXRwLXBhc3N3b3Jk
  SALESFORCE_CLIENT_SECRET: eW91ci1zYWxlc2ZvcmNlLWNsaWVudC1zZWNyZXQ=
  SLACK_WEBHOOK_URL: aHR0cHM6Ly9ob29rcy5zbGFjay5jb20vc2VydmljZXMvWU9VUi9XRUJIT09LL1VSTC==
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: poc-signup-backend
  namespace: poc-signup-portal
  labels:
    app.kubernetes.io/name: poc-signup-backend
    app.kubernetes.io/instance: production
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: isectech-poc-platform
    app.kubernetes.io/managed-by: kubernetes
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: poc-signup-backend
      app.kubernetes.io/instance: production
  template:
    metadata:
      labels:
        app.kubernetes.io/name: poc-signup-backend
        app.kubernetes.io/instance: production
        app.kubernetes.io/version: "1.0.0"
        app.kubernetes.io/component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: poc-signup-backend
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: poc-signup-backend
        image: gcr.io/isectech-poc-platform/poc-signup-backend:1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: poc-signup-backend-secrets
              key: DATABASE_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: poc-signup-backend-secrets
              key: JWT_SECRET
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: poc-signup-backend-secrets
              key: SMTP_PASSWORD
        envFrom:
        - configMapRef:
            name: poc-signup-backend-config
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: gcp-service-account
          mountPath: /var/secrets/google
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: gcp-service-account
        secret:
          secretName: gcp-service-account-key
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - poc-signup-backend
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
---
apiVersion: v1
kind: Service
metadata:
  name: poc-signup-backend-service
  namespace: poc-signup-portal
  labels:
    app.kubernetes.io/name: poc-signup-backend
    app.kubernetes.io/component: backend
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "poc-signup-backend-backendconfig"}'
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  - port: 9090
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app.kubernetes.io/name: poc-signup-backend
    app.kubernetes.io/instance: production
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: poc-signup-backend
  namespace: poc-signup-portal
  labels:
    app.kubernetes.io/name: poc-signup-backend
    app.kubernetes.io/component: backend
  annotations:
    iam.gke.io/gcp-service-account: poc-signup-backend@isectech-poc-platform.iam.gserviceaccount.com
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: poc-signup-backend-netpol
  namespace: poc-signup-portal
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: poc-signup-backend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
    - namespaceSelector:
        matchLabels:
          name: kube-system
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: poc-signup-frontend
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443  # HTTPS
    - protocol: TCP
      port: 53   # DNS
    - protocol: UDP
      port: 53   # DNS
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: poc-signup-backend-backendconfig
  namespace: poc-signup-portal
spec:
  healthCheck:
    checkIntervalSec: 15
    timeoutSec: 10
    healthyThreshold: 1
    unhealthyThreshold: 3
    type: HTTP
    requestPath: /api/v1/health
  sessionAffinity:
    affinityType: "CLIENT_IP"
  timeoutSec: 30
  connectionDraining:
    drainingTimeoutSec: 60
  logging:
    enable: true
    sampleRate: 1.0
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: poc-signup-backend-hpa
  namespace: poc-signup-portal
  labels:
    app.kubernetes.io/name: poc-signup-backend
    app.kubernetes.io/component: backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: poc-signup-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60