# iSECTECH API Gateway - Cloud Run Deployment Configuration
# Production-grade Cloud Run service definition
# Author: Claude Code - iSECTECH Infrastructure Team
# Version: 2.0.0

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: isectech-api-gateway
  namespace: default
  labels:
    app: isectech-api-gateway
    component: api-gateway
    version: v2.0.0
    tier: infrastructure
    managed-by: terraform
    environment: production
  annotations:
    # Cloud Run annotations
    run.googleapis.com/ingress: all
    run.googleapis.com/ingress-status: all
    run.googleapis.com/launch-stage: GA
    autoscaling.knative.dev/maxScale: "100"
    autoscaling.knative.dev/minScale: "1"
    run.googleapis.com/cpu-throttling: "false"
    run.googleapis.com/execution-environment: gen2
    run.googleapis.com/vpc-access-connector: projects/PROJECT_ID/locations/us-central1/connectors/isectech-vpc-connector
    run.googleapis.com/vpc-access-egress: private-ranges-only
    # Security annotations
    run.googleapis.com/binary-authorization: true
    run.googleapis.com/binary-authorization-breakglass: false
    # Monitoring annotations
    run.googleapis.com/description: "iSECTECH Security Platform API Gateway - Production"
spec:
  template:
    metadata:
      labels:
        app: isectech-api-gateway
        version: v2.0.0
        environment: production
      annotations:
        # Scaling configuration
        autoscaling.knative.dev/maxScale: "100"
        autoscaling.knative.dev/minScale: "1"
        autoscaling.knative.dev/scaleDownDelay: "0s"
        autoscaling.knative.dev/scaleToZeroGracePeriod: "30s"
        # Performance optimizations
        run.googleapis.com/cpu-throttling: "false"
        run.googleapis.com/execution-environment: gen2
        # Networking
        run.googleapis.com/vpc-access-connector: projects/PROJECT_ID/locations/us-central1/connectors/isectech-vpc-connector
        run.googleapis.com/vpc-access-egress: private-ranges-only
        # Security
        run.googleapis.com/binary-authorization: true
        # Resource allocation
        run.googleapis.com/memory: "1Gi"
        run.googleapis.com/cpu: "1000m"
    spec:
      serviceAccountName: isectech-api-gateway@PROJECT_ID.iam.gserviceaccount.com
      timeoutSeconds: 300
      containers:
      - name: api-gateway
        image: us-central1-docker.pkg.dev/PROJECT_ID/isectech-production/api-gateway:prod-latest
        ports:
        - name: http1
          containerPort: 8080
          protocol: TCP
        
        # Environment variables
        env:
        # Application configuration
        - name: ENVIRONMENT
          value: "production"
        - name: SERVER_PORT
          value: "8080"
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_FORMAT
          value: "json"
        
        # Security configuration
        - name: JWT_ENABLED
          value: "true"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: isectech-api-gateway-secrets
              key: jwt-secret
        - name: API_KEY_ENABLED
          value: "true"
        - name: SECURITY_REQUIRE_HTTPS
          value: "true"
        - name: SECURITY_REQUEST_SIZE_LIMIT
          value: "10485760"
        
        # Redis configuration (Cloud Memorystore)
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: isectech-api-gateway-secrets
              key: redis-host
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: isectech-api-gateway-secrets
              key: redis-password
        - name: REDIS_POOL_SIZE
          value: "20"
        - name: REDIS_MAX_RETRIES
          value: "3"
        
        # Database configuration (Cloud SQL Proxy)
        - name: DATABASE_ENABLED
          value: "false"
        
        # Rate limiting
        - name: RATE_LIMIT_ENABLED
          value: "true"
        - name: RATE_LIMIT_RPS
          value: "1000"
        - name: RATE_LIMIT_BURST
          value: "2000"
        - name: RATE_LIMIT_WINDOW
          value: "60"
        
        # CORS configuration
        - name: CORS_ENABLED
          value: "true"
        - name: CORS_ALLOWED_ORIGINS
          value: "https://app.isectech.com,https://admin.isectech.com"
        - name: CORS_ALLOWED_METHODS
          value: "GET,POST,PUT,DELETE,OPTIONS"
        - name: CORS_ALLOWED_HEADERS
          value: "Origin,Content-Type,Accept,Authorization,X-API-Key,X-Request-ID"
        - name: CORS_ALLOW_CREDENTIALS
          value: "true"
        
        # Monitoring and observability
        - name: MONITORING_ENABLED
          value: "true"
        - name: TRACING_ENABLED
          value: "true"
        - name: TRACING_SERVICE_NAME
          value: "isectech-api-gateway"
        - name: TRACING_SAMPLE_RATE
          value: "0.1"
        
        # Performance tuning
        - name: SERVER_READ_TIMEOUT
          value: "10"
        - name: SERVER_WRITE_TIMEOUT
          value: "10"
        - name: SERVER_IDLE_TIMEOUT
          value: "60"
        - name: SERVER_MAX_HEADER_BYTES
          value: "1048576"
        
        # Google Cloud specific
        - name: GOOGLE_CLOUD_PROJECT
          value: "PROJECT_ID"
        - name: K_SERVICE
          value: "isectech-api-gateway"
        - name: K_REVISION
          value: "isectech-api-gateway-00001-abc"
        
        # Resource limits and requests
        resources:
          limits:
            cpu: "1000m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        startupProbe:
          httpGet:
            path: /health/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 3
          failureThreshold: 30
          successThreshold: 1
        
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          runAsGroup: 10001
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        
      # DNS configuration
      dnsPolicy: ClusterFirst
      
      # Security context for the pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault

---
# Secret configuration (to be created separately)
apiVersion: v1
kind: Secret
metadata:
  name: isectech-api-gateway-secrets
  namespace: default
  labels:
    app: isectech-api-gateway
type: Opaque
data:
  # Base64 encoded values (to be populated by Terraform or kubectl)
  jwt-secret: ""  # Base64 encoded JWT secret
  redis-host: ""  # Base64 encoded Redis host
  redis-password: ""  # Base64 encoded Redis password

---
# Horizontal Pod Autoscaler (if using GKE instead of Cloud Run)
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: isectech-api-gateway-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: serving.knative.dev/v1
    kind: Service
    name: isectech-api-gateway
  minReplicas: 1
  maxReplicas: 100
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max

---
# Network Policy (if using GKE with network policies enabled)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: isectech-api-gateway-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      app: isectech-api-gateway
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
    - namespaceSelector:
        matchLabels:
          name: default
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 443   # HTTPS
    - protocol: TCP
      port: 53    # DNS
    - protocol: UDP
      port: 53    # DNS