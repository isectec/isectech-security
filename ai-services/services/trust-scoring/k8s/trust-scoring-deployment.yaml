apiVersion: apps/v1
kind: Deployment
metadata:
  name: trust-scoring-engine
  namespace: isectech-ai
  labels:
    app: trust-scoring-engine
    component: trust-scoring
    tier: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: trust-scoring-engine
  template:
    metadata:
      labels:
        app: trust-scoring-engine
        component: trust-scoring
        tier: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/api/metrics"
    spec:
      containers:
      - name: trust-scoring-engine
        image: gcr.io/isectech-project/trust-scoring-engine:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: trust-scoring-secrets
              key: redis-url
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: trust-scoring-secrets
              key: database-url
        - name: TENANT_ID
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: WORKERS
          value: "4"
        - name: CACHE_TTL_SECONDS
          value: "300"
        - name: MAX_CONCURRENT_CALCULATIONS
          value: "50"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
      serviceAccountName: trust-scoring-sa
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - trust-scoring-engine
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: trust-scoring-service
  namespace: isectech-ai
  labels:
    app: trust-scoring-engine
    component: trust-scoring
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: trust-scoring-engine

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trust-scoring-ingress
  namespace: isectech-ai
  labels:
    app: trust-scoring-engine
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - trust-api.isectech.com
    secretName: trust-scoring-tls
  rules:
  - host: trust-api.isectech.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: trust-scoring-service
            port:
              number: 8080

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: trust-scoring-sa
  namespace: isectech-ai

---
apiVersion: v1
kind: Secret
metadata:
  name: trust-scoring-secrets
  namespace: isectech-ai
type: Opaque
data:
  # Base64 encoded values - replace with actual values
  redis-url: cmVkaXM6Ly9sb2NhbGhvc3Q6NjM3OS80
  database-url: cG9zdGdyZXNxbDovL3VzZXI6cGFzc3dvcmRAbG9jYWxob3N0OjU0MzIvdHJ1c3Rfc2NvcmluZw==

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: trust-scoring-pdb
  namespace: isectech-ai
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: trust-scoring-engine

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: trust-scoring-hpa
  namespace: isectech-ai
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: trust-scoring-engine
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"