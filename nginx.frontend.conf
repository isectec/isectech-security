# iSECTECH Frontend - Production Nginx Configuration
# Optimized for security, performance, and SPA routing
# Author: Claude Code - iSECTECH Infrastructure Team
# Version: 2.0.0

# Main nginx configuration
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# Load dynamic modules
load_module modules/ngx_http_geoip_module.so;

# Worker configuration
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ═══════════════════════════════════════════════════════════════════════════════
    # SECURITY CONFIGURATION
    # ═══════════════════════════════════════════════════════════════════════════════

    # Hide nginx version and server information
    server_tokens off;
    more_clear_headers 'Server';
    more_clear_headers 'X-Powered-By';

    # Security headers (applied globally)
    more_set_headers 'X-Frame-Options: DENY';
    more_set_headers 'X-Content-Type-Options: nosniff';
    more_set_headers 'X-XSS-Protection: 1; mode=block';
    more_set_headers 'Referrer-Policy: strict-origin-when-cross-origin';
    more_set_headers 'X-DNS-Prefetch-Control: on';
    more_set_headers 'Permissions-Policy: camera=(), microphone=(), geolocation=(), interest-cohort=(), payment=(), usb=(), bluetooth=()';

    # HSTS (only over HTTPS)
    map $scheme $hsts_header {
        https "max-age=31536000; includeSubDomains; preload";
    }
    more_set_headers 'Strict-Transport-Security: $hsts_header' if=($hsts_header);

    # Content Security Policy
    set $csp_default "default-src 'self'";
    set $csp_script "script-src 'self' 'unsafe-eval' 'unsafe-inline' https://www.googletagmanager.com https://www.google-analytics.com";
    set $csp_style "style-src 'self' 'unsafe-inline' https://fonts.googleapis.com";
    set $csp_img "img-src 'self' data: https: blob:";
    set $csp_font "font-src 'self' data: https://fonts.gstatic.com";
    set $csp_connect "connect-src 'self' https://api.isectech.com https://gateway.isectech.com wss://ws.isectech.com";
    set $csp_media "media-src 'self' data: blob:";
    set $csp_object "object-src 'none'";
    set $csp_base "base-uri 'self'";
    set $csp_form "form-action 'self'";
    set $csp_frame "frame-ancestors 'none'";
    set $csp_upgrade "upgrade-insecure-requests";
    
    set $csp "$csp_default; $csp_script; $csp_style; $csp_img; $csp_font; $csp_connect; $csp_media; $csp_object; $csp_base; $csp_form; $csp_frame; $csp_upgrade";
    more_set_headers "Content-Security-Policy: $csp";

    # ═══════════════════════════════════════════════════════════════════════════════
    # PERFORMANCE CONFIGURATION
    # ═══════════════════════════════════════════════════════════════════════════════

    # Basic performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    client_max_body_size 16M;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Buffer settings
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Compression configuration
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/json
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rss+xml
        application/x-javascript
        application/x-font-ttf
        font/opentype
        image/svg+xml
        image/x-icon;

    # Brotli compression (if module available)
    brotli on;
    brotli_comp_level 6;
    brotli_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/x-font-ttf
        font/opentype
        image/svg+xml;

    # ═══════════════════════════════════════════════════════════════════════════════
    # RATE LIMITING & DDOS PROTECTION
    # ═══════════════════════════════════════════════════════════════════════════════

    # Define rate limit zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # ═══════════════════════════════════════════════════════════════════════════════
    # LOGGING CONFIGURATION
    # ═══════════════════════════════════════════════════════════════════════════════

    # Log format with security information
    log_format security_log '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           '"$http_x_forwarded_for" "$http_x_real_ip" '
                           '$request_time $upstream_response_time '
                           '"$ssl_protocol" "$ssl_cipher"';

    # Standard log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # ═══════════════════════════════════════════════════════════════════════════════
    # SSL/TLS CONFIGURATION
    # ═══════════════════════════════════════════════════════════════════════════════

    # SSL protocols and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # ═══════════════════════════════════════════════════════════════════════════════
    # UPSTREAM CONFIGURATION
    # ═══════════════════════════════════════════════════════════════════════════════

    # API Gateway upstream
    upstream api_gateway {
        server isectech-api-gateway:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # WebSocket upstream
    upstream websocket {
        server isectech-websocket:8081 max_fails=3 fail_timeout=30s;
    }

    # ═══════════════════════════════════════════════════════════════════════════════
    # MAIN SERVER CONFIGURATION
    # ═══════════════════════════════════════════════════════════════════════════════

    server {
        listen 80;
        listen [::]:80;
        server_name protect.isectech.com www.protect.isectech.com;
        
        # Redirect all HTTP traffic to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name protect.isectech.com www.protect.isectech.com;

        # SSL certificate configuration
        ssl_certificate /etc/nginx/ssl/isectech.crt;
        ssl_certificate_key /etc/nginx/ssl/isectech.key;
        ssl_trusted_certificate /etc/nginx/ssl/isectech-chain.crt;

        # Root directory for static files
        root /usr/share/nginx/html;
        index index.html;

        # Connection and rate limiting
        limit_conn addr 20;
        limit_req zone=general burst=20 nodelay;

        # ═══════════════════════════════════════════════════════════════════════════════
        # STATIC ASSET HANDLING
        # ═══════════════════════════════════════════════════════════════════════════════

        # Static assets with long-term caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Gzip static assets
            gzip_static on;
            
            # Security headers for assets
            add_header X-Content-Type-Options "nosniff";
            add_header X-Frame-Options "DENY";
            
            # CORS for fonts and assets
            if ($http_origin ~* (https?://(.*\.)?isectech\.com(:[0-9]+)?)) {
                add_header Access-Control-Allow-Origin "$http_origin";
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Range";
            }
        }

        # Next.js static files
        location /_next/static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            gzip_static on;
        }

        # Images with optimized caching
        location /_next/image {
            expires 7d;
            add_header Cache-Control "public";
            add_header Vary "Accept-Encoding";
        }

        # Manifest and service worker
        location ~* \.(webmanifest|manifest\.json)$ {
            expires 1d;
            add_header Cache-Control "public";
            add_header Content-Type "application/manifest+json";
        }

        location /sw.js {
            expires 1d;
            add_header Cache-Control "public";
            add_header Content-Type "application/javascript";
        }

        # ═══════════════════════════════════════════════════════════════════════════════
        # API PROXY CONFIGURATION
        # ═══════════════════════════════════════════════════════════════════════════════

        # API routes with specific rate limiting
        location /api/ {
            limit_req zone=api burst=30 nodelay;
            
            # Proxy to API Gateway
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Authentication endpoints with stricter rate limiting
        location /api/auth/ {
            limit_req zone=auth burst=10 nodelay;
            
            # Additional security headers for auth
            add_header X-Frame-Options "DENY";
            add_header X-Content-Type-Options "nosniff";
            
            # Proxy to API Gateway
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Shorter timeouts for auth
            proxy_connect_timeout 3s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Login endpoint with very strict rate limiting
        location /api/auth/login {
            limit_req zone=login burst=3 nodelay;
            
            # Log all login attempts
            access_log /var/log/nginx/login.log security_log;
            
            # Proxy settings
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket connections
        location /ws {
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_connect_timeout 7s;
            proxy_send_timeout 3600s;
            proxy_read_timeout 3600s;
        }

        # ═══════════════════════════════════════════════════════════════════════════════
        # SPECIAL ENDPOINTS
        # ═══════════════════════════════════════════════════════════════════════════════

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # Robots.txt
        location = /robots.txt {
            access_log off;
            return 200 "User-agent: *\nDisallow: /\n";
            add_header Content-Type text/plain;
        }

        # Security.txt
        location /.well-known/security.txt {
            access_log off;
            return 200 "Contact: security@isectech.com\nExpires: 2025-12-31T23:59:59.000Z\nEncryption: https://isectech.com/pgp-key.txt\nCanonical: https://protect.isectech.com/.well-known/security.txt\nPolicy: https://isectech.com/security-policy\n";
            add_header Content-Type text/plain;
        }

        # ═══════════════════════════════════════════════════════════════════════════════
        # SECURITY RESTRICTIONS
        # ═══════════════════════════════════════════════════════════════════════════════

        # Block access to hidden files and directories
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block access to backup files
        location ~* \.(bak|backup|swp|old|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block access to configuration files
        location ~* \.(conf|config|yml|yaml|ini|env)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Block common exploit attempts
        location ~* (eval\(|base64_decode|system\(|exec\(|passthru\(|shell_exec\() {
            deny all;
            access_log /var/log/nginx/security.log security_log;
        }

        # ═══════════════════════════════════════════════════════════════════════════════
        # SPA ROUTING (CATCH-ALL)
        # ═══════════════════════════════════════════════════════════════════════════════

        # Handle SPA routing - serve index.html for all unmatched routes
        location / {
            try_files $uri $uri/ /index.html;
            
            # No caching for HTML files
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            
            # Security headers
            add_header X-Frame-Options "DENY";
            add_header X-Content-Type-Options "nosniff";
            add_header X-XSS-Protection "1; mode=block";
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
        }
        
        location = /50x.html {
            internal;
        }
    }

    # ═══════════════════════════════════════════════════════════════════════════════
    # MONITORING SERVER (INTERNAL)
    # ═══════════════════════════════════════════════════════════════════════════════

    server {
        listen 8080;
        server_name localhost;
        access_log off;
        
        # Nginx status for monitoring
        location /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # Basic health check
        location /health {
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }
    }
}